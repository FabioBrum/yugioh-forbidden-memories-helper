package com.example.cards.fragments

import android.os.Bundle
import android.text.SpannableString
import android.text.SpannableStringBuilder
import android.text.style.ForegroundColorSpan
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.TextView
import androidx.core.content.ContextCompat
import com.example.designsystem.R
import androidx.navigation.fragment.findNavController
import androidx.navigation.fragment.navArgs
import androidx.recyclerview.widget.LinearLayoutManager
import com.example.cards.databinding.FragmentCardFusionsBinding
import com.example.cards.viewmodels.CardFusionsViewModel
import com.example.designsystem.adapters.FusionListAdapter
import org.koin.androidx.viewmodel.ext.android.viewModel

class CardFusionsFragment : Fragment() {

    private val fusionListAdapter = FusionListAdapter()
    private val args: CardFusionsFragmentArgs by navArgs()
    private lateinit var binding: FragmentCardFusionsBinding
    private val cardFusionsViewModel by viewModel<CardFusionsViewModel>()

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        binding = FragmentCardFusionsBinding.inflate(inflater, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        with(binding) {
            setupTitle()
            setupObservers()
            setupListeners()
        }
    }

    private fun FragmentCardFusionsBinding.setupTitle() {
        val titleBuilder = SpannableStringBuilder()

        val initialText = SpannableString("Fusions that ")
        titleBuilder.append(initialText)

        val verb = if(args.getFusionsThatGenerateCard) {
            "generate "
        } else {
            "are generated by "
        }
        titleBuilder.append(verb)

        val cardName = SpannableString("${args.cardName}:")
        cardName.setSpan(ForegroundColorSpan(
            ContextCompat.getColor(requireContext(), R.color.colorPrimary)), 0, cardName.length, 0
        )
        titleBuilder.append(cardName)

        textViewCardFusionsTitle.setText(titleBuilder, TextView.BufferType.SPANNABLE)
    }

    private fun FragmentCardFusionsBinding.setupObservers() {
        cardFusionsViewModel.loadFusions(args.cardId, args.getFusionsThatGenerateCard )
            .observe(viewLifecycleOwner) {
                fusionListAdapter.allFusions = it
                recyclerViewCardFusionsFusions.adapter = fusionListAdapter
                recyclerViewCardFusionsFusions.layoutManager = LinearLayoutManager(requireContext())
            }
    }

    private fun FragmentCardFusionsBinding.setupListeners() {
        imageButtonCardFusionsGoBack.setOnClickListener {
            findNavController().popBackStack()
        }
    }
}